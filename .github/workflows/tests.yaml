name: Tests

on:
  pull_request:
    paths:
      - 'src/Clients/**'
      - 'src/Packages/**'
      - 'tests/IntegrationTests/**'

permissions:
  actions: read
  contents: read

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 8 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Clean and prepare nupkgs directory
        run: rm -rf ./nupkgs && mkdir -p ./nupkgs

      - name: Pack all packages to ./nupkgs
        run: |
          dotnet pack src/Packages/AffinidiTdk.AuthProvider/AffinidiTdk.AuthProvider.csproj --output ./nupkgs
          dotnet pack src/Packages/AffinidiTdk.Common/AffinidiTdk.Common.csproj --output ./nupkgs

      - name: Pack all clients to ./nupkgs
        run: |
          dotnet pack src/Clients/CredentialIssuanceClient/src/AffinidiTdk.CredentialIssuanceClient/AffinidiTdk.CredentialIssuanceClient.csproj --output ./nupkgs
          dotnet pack src/Clients/CredentialVerificationClient/src/AffinidiTdk.CredentialVerificationClient/AffinidiTdk.CredentialVerificationClient.csproj --output ./nupkgs
          dotnet pack src/Clients/IamClient/src/AffinidiTdk.IamClient/AffinidiTdk.IamClient.csproj --output ./nupkgs
          dotnet pack src/Clients/IotaClient/src/AffinidiTdk.IotaClient/AffinidiTdk.IotaClient.csproj --output ./nupkgs
          dotnet pack src/Clients/LoginConfigurationClient/src/AffinidiTdk.LoginConfigurationClient/AffinidiTdk.LoginConfigurationClient.csproj --output ./nupkgs
          dotnet pack src/Clients/VaultDataManagerClient/src/AffinidiTdk.VaultDataManagerClient/AffinidiTdk.VaultDataManagerClient.csproj --output ./nupkgs
          dotnet pack src/Clients/WalletsClient/src/AffinidiTdk.WalletsClient/AffinidiTdk.WalletsClient.csproj --output ./nupkgs

      - name: Build all projects in solution
        run: dotnet build AffinidiTdk.sln

      - name: Cache testing env file
        uses: actions/cache@v4
        id: testing-env-cache
        with:
          path: tests/.env
          key: ${{ runner.os }}-testing-env-${{ hashFiles('tests/.env') }}

      - if: ${{ steps.testing-env-cache.outputs.cache-hit != 'true' }}
        name: Prepare environment file
        env:
          TESTING_ENV_FILE_CONTENT: ${{ secrets.TESTING_ENV_FILE_CONTENT }}
        run: echo $TESTING_ENV_FILE_CONTENT | base64 --decode > tests/.env

      - name: Restore and run tests for packages
        run: |
          dotnet restore tests/Packages/AffinidiTdk.AuthProvider.Tests/AffinidiTdk.AuthProvider.Tests.csproj --configfile nuget.config
          dotnet test tests/Packages/AffinidiTdk.AuthProvider.Tests/AffinidiTdk.AuthProvider.Tests.csproj
          dotnet restore tests/Packages/AffinidiTdk.Common.Tests/AffinidiTdk.Common.Tests.csproj --configfile nuget.config
          dotnet test tests/Packages/AffinidiTdk.Common.Tests/AffinidiTdk.Common.Tests.csproj

      - name: Restore and run tests for packages
        run: |
          dotnet restore tests/IntegrationTests/IntegrationTests.csproj --configfile nuget.config
          dotnet test tests/IntegrationTests/IntegrationTests.csproj
