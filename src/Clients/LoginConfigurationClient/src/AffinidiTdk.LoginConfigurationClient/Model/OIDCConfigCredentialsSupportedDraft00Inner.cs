/*
 * OidcVpAdapterBackend
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = AffinidiTdk.LoginConfigurationClient.Client.FileParameter;
using OpenAPIDateConverter = AffinidiTdk.LoginConfigurationClient.Client.OpenAPIDateConverter;

namespace AffinidiTdk.LoginConfigurationClient.Model
{
    /// <summary>
    /// OIDCConfigCredentialsSupportedDraft00Inner
    /// </summary>
    [DataContract(Name = "OIDCConfig_credentials_supported_draft_00_inner")]
    public partial class OIDCConfigCredentialsSupportedDraft00Inner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OIDCConfigCredentialsSupportedDraft00Inner" /> class.
        /// </summary>
        /// <param name="cryptographicBindingMethodsSupported">cryptographicBindingMethodsSupported.</param>
        /// <param name="cryptographicSuitesSupported">cryptographicSuitesSupported.</param>
        /// <param name="format">format.</param>
        /// <param name="types">types.</param>
        public OIDCConfigCredentialsSupportedDraft00Inner(List<string> cryptographicBindingMethodsSupported = default, List<string> cryptographicSuitesSupported = default, string format = default, List<string> types = default)
        {
            this.CryptographicBindingMethodsSupported = cryptographicBindingMethodsSupported;
            this.CryptographicSuitesSupported = cryptographicSuitesSupported;
            this.Format = format;
            this.Types = types;
        }

        /// <summary>
        /// Gets or Sets CryptographicBindingMethodsSupported
        /// </summary>
        [DataMember(Name = "cryptographic_binding_methods_supported", EmitDefaultValue = false)]
        public List<string> CryptographicBindingMethodsSupported { get; set; }

        /// <summary>
        /// Gets or Sets CryptographicSuitesSupported
        /// </summary>
        [DataMember(Name = "cryptographic_suites_supported", EmitDefaultValue = false)]
        public List<string> CryptographicSuitesSupported { get; set; }

        /// <summary>
        /// Gets or Sets Format
        /// </summary>
        [DataMember(Name = "format", EmitDefaultValue = false)]
        public string Format { get; set; }

        /// <summary>
        /// Gets or Sets Types
        /// </summary>
        [DataMember(Name = "types", EmitDefaultValue = false)]
        public List<string> Types { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OIDCConfigCredentialsSupportedDraft00Inner {\n");
            sb.Append("  CryptographicBindingMethodsSupported: ").Append(CryptographicBindingMethodsSupported).Append("\n");
            sb.Append("  CryptographicSuitesSupported: ").Append(CryptographicSuitesSupported).Append("\n");
            sb.Append("  Format: ").Append(Format).Append("\n");
            sb.Append("  Types: ").Append(Types).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
