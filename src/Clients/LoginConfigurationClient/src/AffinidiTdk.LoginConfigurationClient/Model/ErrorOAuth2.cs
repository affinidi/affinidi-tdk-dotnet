/*
 * OidcVpAdapterBackend
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = AffinidiTdk.LoginConfigurationClient.Client.FileParameter;
using OpenAPIDateConverter = AffinidiTdk.LoginConfigurationClient.Client.OpenAPIDateConverter;

namespace AffinidiTdk.LoginConfigurationClient.Model
{
    /// <summary>
    /// ErrorOAuth2
    /// </summary>
    [DataContract(Name = "ErrorOAuth2")]
    public partial class ErrorOAuth2 : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ErrorOAuth2" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ErrorOAuth2() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ErrorOAuth2" /> class.
        /// </summary>
        /// <param name="error">Error (required).</param>
        /// <param name="errorDebug">Error Debug Information. Only available in dev mode..</param>
        /// <param name="errorDescription">Error Description (required).</param>
        /// <param name="errorHint">Error Hint. Helps the user identify the error cause..</param>
        /// <param name="statusCode">HTTP Status Code (required).</param>
        public ErrorOAuth2(string error = default, string errorDebug = default, string errorDescription = default, string errorHint = default, string statusCode = default)
        {
            // to ensure "error" is required (not null)
            if (error == null)
            {
                throw new ArgumentNullException("error is a required property for ErrorOAuth2 and cannot be null");
            }
            this.Error = error;
            // to ensure "errorDescription" is required (not null)
            if (errorDescription == null)
            {
                throw new ArgumentNullException("errorDescription is a required property for ErrorOAuth2 and cannot be null");
            }
            this.ErrorDescription = errorDescription;
            // to ensure "statusCode" is required (not null)
            if (statusCode == null)
            {
                throw new ArgumentNullException("statusCode is a required property for ErrorOAuth2 and cannot be null");
            }
            this.StatusCode = statusCode;
            this.ErrorDebug = errorDebug;
            this.ErrorHint = errorHint;
        }

        /// <summary>
        /// Error
        /// </summary>
        /// <value>Error</value>
        [DataMember(Name = "error", IsRequired = true, EmitDefaultValue = true)]
        public string Error { get; set; }

        /// <summary>
        /// Error Debug Information. Only available in dev mode.
        /// </summary>
        /// <value>Error Debug Information. Only available in dev mode.</value>
        [DataMember(Name = "error_debug", EmitDefaultValue = false)]
        public string ErrorDebug { get; set; }

        /// <summary>
        /// Error Description
        /// </summary>
        /// <value>Error Description</value>
        [DataMember(Name = "error_description", IsRequired = true, EmitDefaultValue = true)]
        public string ErrorDescription { get; set; }

        /// <summary>
        /// Error Hint. Helps the user identify the error cause.
        /// </summary>
        /// <value>Error Hint. Helps the user identify the error cause.</value>
        [DataMember(Name = "error_hint", EmitDefaultValue = false)]
        public string ErrorHint { get; set; }

        /// <summary>
        /// HTTP Status Code
        /// </summary>
        /// <value>HTTP Status Code</value>
        [DataMember(Name = "status_code", IsRequired = true, EmitDefaultValue = true)]
        public string StatusCode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ErrorOAuth2 {\n");
            sb.Append("  Error: ").Append(Error).Append("\n");
            sb.Append("  ErrorDebug: ").Append(ErrorDebug).Append("\n");
            sb.Append("  ErrorDescription: ").Append(ErrorDescription).Append("\n");
            sb.Append("  ErrorHint: ").Append(ErrorHint).Append("\n");
            sb.Append("  StatusCode: ").Append(StatusCode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
