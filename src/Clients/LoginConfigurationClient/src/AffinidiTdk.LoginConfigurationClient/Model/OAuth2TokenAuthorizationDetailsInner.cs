/*
 * OidcVpAdapterBackend
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = AffinidiTdk.LoginConfigurationClient.Client.FileParameter;
using OpenAPIDateConverter = AffinidiTdk.LoginConfigurationClient.Client.OpenAPIDateConverter;

namespace AffinidiTdk.LoginConfigurationClient.Model
{
    /// <summary>
    /// OAuth2TokenAuthorizationDetailsInner
    /// </summary>
    [DataContract(Name = "OAuth2Token_authorization_details_inner")]
    public partial class OAuth2TokenAuthorizationDetailsInner : IValidatableObject
    {
        /// <summary>
        /// String that determines the authorization details type. 
        /// </summary>
        /// <value>String that determines the authorization details type. </value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TypeEnum
        {
            /// <summary>
            /// Enum OpenidCredential for value: openid_credential
            /// </summary>
            [EnumMember(Value = "openid_credential")]
            OpenidCredential = 1
        }


        /// <summary>
        /// String that determines the authorization details type. 
        /// </summary>
        /// <value>String that determines the authorization details type. </value>
        [DataMember(Name = "type", IsRequired = true, EmitDefaultValue = true)]
        public TypeEnum Type { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="OAuth2TokenAuthorizationDetailsInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected OAuth2TokenAuthorizationDetailsInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="OAuth2TokenAuthorizationDetailsInner" /> class.
        /// </summary>
        /// <param name="type">String that determines the authorization details type.  (required) (default to TypeEnum.OpenidCredential).</param>
        /// <param name="credentialConfigurationId">credentialConfigurationId (required).</param>
        /// <param name="credentialIdentifiers">credentialIdentifiers.</param>
        public OAuth2TokenAuthorizationDetailsInner(TypeEnum type = TypeEnum.OpenidCredential, string credentialConfigurationId = default, List<string> credentialIdentifiers = default)
        {
            this.Type = type;
            // to ensure "credentialConfigurationId" is required (not null)
            if (credentialConfigurationId == null)
            {
                throw new ArgumentNullException("credentialConfigurationId is a required property for OAuth2TokenAuthorizationDetailsInner and cannot be null");
            }
            this.CredentialConfigurationId = credentialConfigurationId;
            this.CredentialIdentifiers = credentialIdentifiers;
        }

        /// <summary>
        /// Gets or Sets CredentialConfigurationId
        /// </summary>
        [DataMember(Name = "credential_configuration_id", IsRequired = true, EmitDefaultValue = true)]
        public string CredentialConfigurationId { get; set; }

        /// <summary>
        /// Gets or Sets CredentialIdentifiers
        /// </summary>
        [DataMember(Name = "credential_identifiers", EmitDefaultValue = false)]
        public List<string> CredentialIdentifiers { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OAuth2TokenAuthorizationDetailsInner {\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  CredentialConfigurationId: ").Append(CredentialConfigurationId).Append("\n");
            sb.Append("  CredentialIdentifiers: ").Append(CredentialIdentifiers).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
