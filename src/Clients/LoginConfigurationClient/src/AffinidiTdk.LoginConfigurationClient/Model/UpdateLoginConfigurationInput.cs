/*
 * OidcVpAdapterBackend
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AffinidiTdk.LoginConfigurationClient.Client.FileParameter;
using OpenAPIDateConverter = AffinidiTdk.LoginConfigurationClient.Client.OpenAPIDateConverter;

namespace AffinidiTdk.LoginConfigurationClient.Model
{
    /// <summary>
    /// UpdateLoginConfigurationInput
    /// </summary>
    [DataContract(Name = "UpdateLoginConfigurationInput")]
    public partial class UpdateLoginConfigurationInput : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets TokenEndpointAuthMethod
        /// </summary>
        [DataMember(Name = "tokenEndpointAuthMethod", EmitDefaultValue = false)]
        public TokenEndpointAuthMethod? TokenEndpointAuthMethod { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateLoginConfigurationInput" /> class.
        /// </summary>
        /// <param name="name">User defined login configuration name.</param>
        /// <param name="redirectUris">OAuth 2.0 Redirect URIs.</param>
        /// <param name="postLogoutRedirectUris">Post Logout Redirect URIs, Used to redirect the user&#39;s browser to a specified URL after the logout process is complete. Must match the domain, port, scheme of at least one of the registered redirect URIs.</param>
        /// <param name="clientSecret">OAuth2 client secret.</param>
        /// <param name="vpDefinition">VP definition in JSON stringify format.</param>
        /// <param name="presentationDefinition">Presentation Definition.</param>
        /// <param name="idTokenMapping">Fields name/path mapping between the vp_token and the id_token.</param>
        /// <param name="clientMetadata">clientMetadata.</param>
        /// <param name="tokenEndpointAuthMethod">tokenEndpointAuthMethod.</param>
        /// <param name="failOnMappingConflict">Interrupts login process if duplications of data fields names will be found.</param>
        public UpdateLoginConfigurationInput(string name = default, List<string> redirectUris = default, List<string> postLogoutRedirectUris = default, string clientSecret = default, string vpDefinition = default, Object presentationDefinition = default, List<IdTokenMappingItem> idTokenMapping = default, LoginConfigurationClientMetadataInput clientMetadata = default, TokenEndpointAuthMethod? tokenEndpointAuthMethod = default, bool failOnMappingConflict = default)
        {
            this.Name = name;
            this.RedirectUris = redirectUris;
            this.PostLogoutRedirectUris = postLogoutRedirectUris;
            this.ClientSecret = clientSecret;
            this.VpDefinition = vpDefinition;
            this.PresentationDefinition = presentationDefinition;
            this.IdTokenMapping = idTokenMapping;
            this.ClientMetadata = clientMetadata;
            this.TokenEndpointAuthMethod = tokenEndpointAuthMethod;
            this.FailOnMappingConflict = failOnMappingConflict;
        }

        /// <summary>
        /// User defined login configuration name
        /// </summary>
        /// <value>User defined login configuration name</value>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// OAuth 2.0 Redirect URIs
        /// </summary>
        /// <value>OAuth 2.0 Redirect URIs</value>
        [DataMember(Name = "redirectUris", EmitDefaultValue = false)]
        public List<string> RedirectUris { get; set; }

        /// <summary>
        /// Post Logout Redirect URIs, Used to redirect the user&#39;s browser to a specified URL after the logout process is complete. Must match the domain, port, scheme of at least one of the registered redirect URIs
        /// </summary>
        /// <value>Post Logout Redirect URIs, Used to redirect the user&#39;s browser to a specified URL after the logout process is complete. Must match the domain, port, scheme of at least one of the registered redirect URIs</value>
        [DataMember(Name = "postLogoutRedirectUris", EmitDefaultValue = false)]
        public List<string> PostLogoutRedirectUris { get; set; }

        /// <summary>
        /// OAuth2 client secret
        /// </summary>
        /// <value>OAuth2 client secret</value>
        [DataMember(Name = "clientSecret", EmitDefaultValue = false)]
        public string ClientSecret { get; set; }

        /// <summary>
        /// VP definition in JSON stringify format
        /// </summary>
        /// <value>VP definition in JSON stringify format</value>
        [DataMember(Name = "vpDefinition", EmitDefaultValue = false)]
        public string VpDefinition { get; set; }

        /// <summary>
        /// Presentation Definition
        /// </summary>
        /// <value>Presentation Definition</value>
        [DataMember(Name = "presentationDefinition", EmitDefaultValue = false)]
        public Object PresentationDefinition { get; set; }

        /// <summary>
        /// Fields name/path mapping between the vp_token and the id_token
        /// </summary>
        /// <value>Fields name/path mapping between the vp_token and the id_token</value>
        [DataMember(Name = "idTokenMapping", EmitDefaultValue = false)]
        public List<IdTokenMappingItem> IdTokenMapping { get; set; }

        /// <summary>
        /// Gets or Sets ClientMetadata
        /// </summary>
        [DataMember(Name = "clientMetadata", EmitDefaultValue = false)]
        public LoginConfigurationClientMetadataInput ClientMetadata { get; set; }

        /// <summary>
        /// Interrupts login process if duplications of data fields names will be found
        /// </summary>
        /// <value>Interrupts login process if duplications of data fields names will be found</value>
        [DataMember(Name = "failOnMappingConflict", EmitDefaultValue = true)]
        public bool FailOnMappingConflict { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UpdateLoginConfigurationInput {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  RedirectUris: ").Append(RedirectUris).Append("\n");
            sb.Append("  PostLogoutRedirectUris: ").Append(PostLogoutRedirectUris).Append("\n");
            sb.Append("  ClientSecret: ").Append(ClientSecret).Append("\n");
            sb.Append("  VpDefinition: ").Append(VpDefinition).Append("\n");
            sb.Append("  PresentationDefinition: ").Append(PresentationDefinition).Append("\n");
            sb.Append("  IdTokenMapping: ").Append(IdTokenMapping).Append("\n");
            sb.Append("  ClientMetadata: ").Append(ClientMetadata).Append("\n");
            sb.Append("  TokenEndpointAuthMethod: ").Append(TokenEndpointAuthMethod).Append("\n");
            sb.Append("  FailOnMappingConflict: ").Append(FailOnMappingConflict).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
