/*
 * OidcVpAdapterBackend
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AffinidiTdk.LoginConfigurationClient.Client.FileParameter;
using OpenAPIDateConverter = AffinidiTdk.LoginConfigurationClient.Client.OpenAPIDateConverter;

namespace AffinidiTdk.LoginConfigurationClient.Model
{
    /// <summary>
    /// Authorization Response per OpenID for Verifiable Presentations Specification
    /// </summary>
    [DataContract(Name = "LoginSessionRejectResponseInput")]
    public partial class LoginSessionRejectResponseInput : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LoginSessionRejectResponseInput" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected LoginSessionRejectResponseInput() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="LoginSessionRejectResponseInput" /> class.
        /// </summary>
        /// <param name="error">The error should follow the OAuth2 error format (e.g. invalid_request, login_required). Defaults to request_denied.</param>
        /// <param name="errorDescription">Description of the error in a human readable format.</param>
        /// <param name="state">Random state associated to the Session (required).</param>
        public LoginSessionRejectResponseInput(string error = default, string errorDescription = default, string state = default)
        {
            // to ensure "state" is required (not null)
            if (state == null)
            {
                throw new ArgumentNullException("state is a required property for LoginSessionRejectResponseInput and cannot be null");
            }
            this.State = state;
            this.Error = error;
            this.ErrorDescription = errorDescription;
        }

        /// <summary>
        /// The error should follow the OAuth2 error format (e.g. invalid_request, login_required). Defaults to request_denied
        /// </summary>
        /// <value>The error should follow the OAuth2 error format (e.g. invalid_request, login_required). Defaults to request_denied</value>
        [DataMember(Name = "error", EmitDefaultValue = false)]
        public string Error { get; set; }

        /// <summary>
        /// Description of the error in a human readable format
        /// </summary>
        /// <value>Description of the error in a human readable format</value>
        [DataMember(Name = "errorDescription", EmitDefaultValue = false)]
        public string ErrorDescription { get; set; }

        /// <summary>
        /// Random state associated to the Session
        /// </summary>
        /// <value>Random state associated to the Session</value>
        [DataMember(Name = "state", IsRequired = true, EmitDefaultValue = true)]
        public string State { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class LoginSessionRejectResponseInput {\n");
            sb.Append("  Error: ").Append(Error).Append("\n");
            sb.Append("  ErrorDescription: ").Append(ErrorDescription).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
