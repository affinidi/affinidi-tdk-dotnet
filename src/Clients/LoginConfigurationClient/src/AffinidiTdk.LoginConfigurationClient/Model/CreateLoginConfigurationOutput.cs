/*
 * OidcVpAdapterBackend
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AffinidiTdk.LoginConfigurationClient.Client.FileParameter;
using OpenAPIDateConverter = AffinidiTdk.LoginConfigurationClient.Client.OpenAPIDateConverter;

namespace AffinidiTdk.LoginConfigurationClient.Model
{
    /// <summary>
    /// CreateLoginConfigurationOutput
    /// </summary>
    [DataContract(Name = "CreateLoginConfigurationOutput")]
    public partial class CreateLoginConfigurationOutput : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateLoginConfigurationOutput" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CreateLoginConfigurationOutput() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateLoginConfigurationOutput" /> class.
        /// </summary>
        /// <param name="ari">Configuration ari (required).</param>
        /// <param name="projectId">Project id (required).</param>
        /// <param name="configurationId">Configuration id.</param>
        /// <param name="name">User defined login configuration name (required).</param>
        /// <param name="auth">auth (required).</param>
        /// <param name="redirectUris">OAuth 2.0 Redirect URIs (required).</param>
        /// <param name="clientMetadata">clientMetadata (required).</param>
        /// <param name="creationDate">OAuth 2.0 Client Creation Date (required).</param>
        /// <param name="postLogoutRedirectUris">Post Logout Redirect URIs, Used to redirect the user&#39;s browser to a specified URL after the logout process is complete. Must match the domain, port, scheme of at least one of the registered redirect URIs.</param>
        public CreateLoginConfigurationOutput(string ari = default, string projectId = default, string configurationId = default, string name = default, CreateLoginConfigurationOutputAuth auth = default, List<string> redirectUris = default, LoginConfigurationClientMetadataOutput clientMetadata = default, string creationDate = default, List<string> postLogoutRedirectUris = default)
        {
            // to ensure "ari" is required (not null)
            if (ari == null)
            {
                throw new ArgumentNullException("ari is a required property for CreateLoginConfigurationOutput and cannot be null");
            }
            this.Ari = ari;
            // to ensure "projectId" is required (not null)
            if (projectId == null)
            {
                throw new ArgumentNullException("projectId is a required property for CreateLoginConfigurationOutput and cannot be null");
            }
            this.ProjectId = projectId;
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new ArgumentNullException("name is a required property for CreateLoginConfigurationOutput and cannot be null");
            }
            this.Name = name;
            // to ensure "auth" is required (not null)
            if (auth == null)
            {
                throw new ArgumentNullException("auth is a required property for CreateLoginConfigurationOutput and cannot be null");
            }
            this.Auth = auth;
            // to ensure "redirectUris" is required (not null)
            if (redirectUris == null)
            {
                throw new ArgumentNullException("redirectUris is a required property for CreateLoginConfigurationOutput and cannot be null");
            }
            this.RedirectUris = redirectUris;
            // to ensure "clientMetadata" is required (not null)
            if (clientMetadata == null)
            {
                throw new ArgumentNullException("clientMetadata is a required property for CreateLoginConfigurationOutput and cannot be null");
            }
            this.ClientMetadata = clientMetadata;
            // to ensure "creationDate" is required (not null)
            if (creationDate == null)
            {
                throw new ArgumentNullException("creationDate is a required property for CreateLoginConfigurationOutput and cannot be null");
            }
            this.CreationDate = creationDate;
            this.ConfigurationId = configurationId;
            this.PostLogoutRedirectUris = postLogoutRedirectUris;
        }

        /// <summary>
        /// Configuration ari
        /// </summary>
        /// <value>Configuration ari</value>
        [DataMember(Name = "ari", IsRequired = true, EmitDefaultValue = true)]
        public string Ari { get; set; }

        /// <summary>
        /// Project id
        /// </summary>
        /// <value>Project id</value>
        [DataMember(Name = "projectId", IsRequired = true, EmitDefaultValue = true)]
        public string ProjectId { get; set; }

        /// <summary>
        /// Configuration id
        /// </summary>
        /// <value>Configuration id</value>
        [DataMember(Name = "configurationId", EmitDefaultValue = false)]
        public string ConfigurationId { get; set; }

        /// <summary>
        /// User defined login configuration name
        /// </summary>
        /// <value>User defined login configuration name</value>
        [DataMember(Name = "name", IsRequired = true, EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Auth
        /// </summary>
        [DataMember(Name = "auth", IsRequired = true, EmitDefaultValue = true)]
        public CreateLoginConfigurationOutputAuth Auth { get; set; }

        /// <summary>
        /// OAuth 2.0 Redirect URIs
        /// </summary>
        /// <value>OAuth 2.0 Redirect URIs</value>
        [DataMember(Name = "redirectUris", IsRequired = true, EmitDefaultValue = true)]
        public List<string> RedirectUris { get; set; }

        /// <summary>
        /// Gets or Sets ClientMetadata
        /// </summary>
        [DataMember(Name = "clientMetadata", IsRequired = true, EmitDefaultValue = true)]
        public LoginConfigurationClientMetadataOutput ClientMetadata { get; set; }

        /// <summary>
        /// OAuth 2.0 Client Creation Date
        /// </summary>
        /// <value>OAuth 2.0 Client Creation Date</value>
        [DataMember(Name = "creationDate", IsRequired = true, EmitDefaultValue = true)]
        public string CreationDate { get; set; }

        /// <summary>
        /// Post Logout Redirect URIs, Used to redirect the user&#39;s browser to a specified URL after the logout process is complete. Must match the domain, port, scheme of at least one of the registered redirect URIs
        /// </summary>
        /// <value>Post Logout Redirect URIs, Used to redirect the user&#39;s browser to a specified URL after the logout process is complete. Must match the domain, port, scheme of at least one of the registered redirect URIs</value>
        [DataMember(Name = "postLogoutRedirectUris", EmitDefaultValue = false)]
        public List<string> PostLogoutRedirectUris { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateLoginConfigurationOutput {\n");
            sb.Append("  Ari: ").Append(Ari).Append("\n");
            sb.Append("  ProjectId: ").Append(ProjectId).Append("\n");
            sb.Append("  ConfigurationId: ").Append(ConfigurationId).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Auth: ").Append(Auth).Append("\n");
            sb.Append("  RedirectUris: ").Append(RedirectUris).Append("\n");
            sb.Append("  ClientMetadata: ").Append(ClientMetadata).Append("\n");
            sb.Append("  CreationDate: ").Append(CreationDate).Append("\n");
            sb.Append("  PostLogoutRedirectUris: ").Append(PostLogoutRedirectUris).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
