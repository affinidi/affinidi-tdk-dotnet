/*
 * OidcVpAdapterBackend
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = AffinidiTdk.LoginConfigurationClient.Client.FileParameter;
using OpenAPIDateConverter = AffinidiTdk.LoginConfigurationClient.Client.OpenAPIDateConverter;

namespace AffinidiTdk.LoginConfigurationClient.Model
{
    /// <summary>
    /// OIDC Auth Credentials
    /// </summary>
    [DataContract(Name = "CreateLoginConfigurationOutput_auth")]
    public partial class CreateLoginConfigurationOutputAuth : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateLoginConfigurationOutputAuth" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CreateLoginConfigurationOutputAuth() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateLoginConfigurationOutputAuth" /> class.
        /// </summary>
        /// <param name="clientId">OAuth 2.0 Client ID (required).</param>
        /// <param name="clientSecret">OAuth 2.0 Client Secret.</param>
        /// <param name="scope">OAuth 2.0 Client Scope.</param>
        /// <param name="issuer">Issuer URL.</param>
        public CreateLoginConfigurationOutputAuth(string clientId = default, string clientSecret = default, string scope = default, string issuer = default)
        {
            // to ensure "clientId" is required (not null)
            if (clientId == null)
            {
                throw new ArgumentNullException("clientId is a required property for CreateLoginConfigurationOutputAuth and cannot be null");
            }
            this.ClientId = clientId;
            this.ClientSecret = clientSecret;
            this.Scope = scope;
            this.Issuer = issuer;
        }

        /// <summary>
        /// OAuth 2.0 Client ID
        /// </summary>
        /// <value>OAuth 2.0 Client ID</value>
        [DataMember(Name = "clientId", IsRequired = true, EmitDefaultValue = true)]
        public string ClientId { get; set; }

        /// <summary>
        /// OAuth 2.0 Client Secret
        /// </summary>
        /// <value>OAuth 2.0 Client Secret</value>
        [DataMember(Name = "clientSecret", EmitDefaultValue = false)]
        public string ClientSecret { get; set; }

        /// <summary>
        /// OAuth 2.0 Client Scope
        /// </summary>
        /// <value>OAuth 2.0 Client Scope</value>
        [DataMember(Name = "scope", EmitDefaultValue = false)]
        public string Scope { get; set; }

        /// <summary>
        /// Issuer URL
        /// </summary>
        /// <value>Issuer URL</value>
        [DataMember(Name = "issuer", EmitDefaultValue = false)]
        public string Issuer { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateLoginConfigurationOutputAuth {\n");
            sb.Append("  ClientId: ").Append(ClientId).Append("\n");
            sb.Append("  ClientSecret: ").Append(ClientSecret).Append("\n");
            sb.Append("  Scope: ").Append(Scope).Append("\n");
            sb.Append("  Issuer: ").Append(Issuer).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
