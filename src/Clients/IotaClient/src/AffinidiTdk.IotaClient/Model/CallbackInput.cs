/*
 * IotaService
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AffinidiTdk.IotaClient.Client.FileParameter;
using OpenAPIDateConverter = AffinidiTdk.IotaClient.Client.OpenAPIDateConverter;

namespace AffinidiTdk.IotaClient.Model
{
    /// <summary>
    /// CallbackInput
    /// </summary>
    [DataContract(Name = "CallbackInput")]
    public partial class CallbackInput : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CallbackInput" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CallbackInput() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CallbackInput" /> class.
        /// </summary>
        /// <param name="state">A randomly generated string that follows a valid UUID (version 1-5) format to validate the session. (required).</param>
        /// <param name="presentationSubmission">A JSON string format that describes the link between the Verifiable Presentation and Presentation Definition for the verifier. The presentation submission follows the OID4VP standard..</param>
        /// <param name="vpToken">A JSON string format containing the data the user consented to share in a Verifiable Presentation format. The VP Token follows the OID4VP standard..</param>
        /// <param name="error">A short string indicating the error code reported by the service. It follows the OAuth 2.0 error code format (e.g., invalid_request, access_denied). The default is access_denied..</param>
        /// <param name="errorDescription">A human-readable description that provides detailed information about the error..</param>
        /// <param name="onboarded">It specifies whether the data sharing flow triggered an onboarding process to the Affinidi Vault [New User]..</param>
        public CallbackInput(string state = default, string presentationSubmission = default, string vpToken = default, string error = default, string errorDescription = default, bool onboarded = default)
        {
            // to ensure "state" is required (not null)
            if (state == null)
            {
                throw new ArgumentNullException("state is a required property for CallbackInput and cannot be null");
            }
            this.State = state;
            this.PresentationSubmission = presentationSubmission;
            this.VpToken = vpToken;
            this.Error = error;
            this.ErrorDescription = errorDescription;
            this.Onboarded = onboarded;
        }

        /// <summary>
        /// A randomly generated string that follows a valid UUID (version 1-5) format to validate the session.
        /// </summary>
        /// <value>A randomly generated string that follows a valid UUID (version 1-5) format to validate the session.</value>
        [DataMember(Name = "state", IsRequired = true, EmitDefaultValue = true)]
        public string State { get; set; }

        /// <summary>
        /// A JSON string format that describes the link between the Verifiable Presentation and Presentation Definition for the verifier. The presentation submission follows the OID4VP standard.
        /// </summary>
        /// <value>A JSON string format that describes the link between the Verifiable Presentation and Presentation Definition for the verifier. The presentation submission follows the OID4VP standard.</value>
        [DataMember(Name = "presentation_submission", EmitDefaultValue = false)]
        public string PresentationSubmission { get; set; }

        /// <summary>
        /// A JSON string format containing the data the user consented to share in a Verifiable Presentation format. The VP Token follows the OID4VP standard.
        /// </summary>
        /// <value>A JSON string format containing the data the user consented to share in a Verifiable Presentation format. The VP Token follows the OID4VP standard.</value>
        [DataMember(Name = "vp_token", EmitDefaultValue = false)]
        public string VpToken { get; set; }

        /// <summary>
        /// A short string indicating the error code reported by the service. It follows the OAuth 2.0 error code format (e.g., invalid_request, access_denied). The default is access_denied.
        /// </summary>
        /// <value>A short string indicating the error code reported by the service. It follows the OAuth 2.0 error code format (e.g., invalid_request, access_denied). The default is access_denied.</value>
        [DataMember(Name = "error", EmitDefaultValue = false)]
        public string Error { get; set; }

        /// <summary>
        /// A human-readable description that provides detailed information about the error.
        /// </summary>
        /// <value>A human-readable description that provides detailed information about the error.</value>
        [DataMember(Name = "error_description", EmitDefaultValue = false)]
        public string ErrorDescription { get; set; }

        /// <summary>
        /// It specifies whether the data sharing flow triggered an onboarding process to the Affinidi Vault [New User].
        /// </summary>
        /// <value>It specifies whether the data sharing flow triggered an onboarding process to the Affinidi Vault [New User].</value>
        [DataMember(Name = "onboarded", EmitDefaultValue = true)]
        public bool Onboarded { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CallbackInput {\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  PresentationSubmission: ").Append(PresentationSubmission).Append("\n");
            sb.Append("  VpToken: ").Append(VpToken).Append("\n");
            sb.Append("  Error: ").Append(Error).Append("\n");
            sb.Append("  ErrorDescription: ").Append(ErrorDescription).Append("\n");
            sb.Append("  Onboarded: ").Append(Onboarded).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
