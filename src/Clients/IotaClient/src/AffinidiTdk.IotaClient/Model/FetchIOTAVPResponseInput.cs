/*
 * IotaService
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = AffinidiTdk.IotaClient.Client.FileParameter;
using OpenAPIDateConverter = AffinidiTdk.IotaClient.Client.OpenAPIDateConverter;

namespace AffinidiTdk.IotaClient.Model
{
    /// <summary>
    /// FetchIOTAVPResponseInput
    /// </summary>
    [DataContract(Name = "FetchIOTAVPResponseInput")]
    public partial class FetchIOTAVPResponseInput : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FetchIOTAVPResponseInput" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected FetchIOTAVPResponseInput() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="FetchIOTAVPResponseInput" /> class.
        /// </summary>
        /// <param name="correlationId">A unique, randomly generated identifier that correlates the request and response in the data-sharing request flow. (required).</param>
        /// <param name="transactionId">A unique, randomly generated identifier data-sharing request flow is initiated. This value is used with the response code to fetch the callback response data. (required).</param>
        /// <param name="responseCode">A unique identifier to fetch the callback response data. Send this value together with the transactionId to successfully fetch the data. (required).</param>
        /// <param name="configurationId">ID of the Affinidi Iota Framework configuration. (required).</param>
        public FetchIOTAVPResponseInput(string correlationId = default, string transactionId = default, string responseCode = default, string configurationId = default)
        {
            // to ensure "correlationId" is required (not null)
            if (correlationId == null)
            {
                throw new ArgumentNullException("correlationId is a required property for FetchIOTAVPResponseInput and cannot be null");
            }
            this.CorrelationId = correlationId;
            // to ensure "transactionId" is required (not null)
            if (transactionId == null)
            {
                throw new ArgumentNullException("transactionId is a required property for FetchIOTAVPResponseInput and cannot be null");
            }
            this.TransactionId = transactionId;
            // to ensure "responseCode" is required (not null)
            if (responseCode == null)
            {
                throw new ArgumentNullException("responseCode is a required property for FetchIOTAVPResponseInput and cannot be null");
            }
            this.ResponseCode = responseCode;
            // to ensure "configurationId" is required (not null)
            if (configurationId == null)
            {
                throw new ArgumentNullException("configurationId is a required property for FetchIOTAVPResponseInput and cannot be null");
            }
            this.ConfigurationId = configurationId;
        }

        /// <summary>
        /// A unique, randomly generated identifier that correlates the request and response in the data-sharing request flow.
        /// </summary>
        /// <value>A unique, randomly generated identifier that correlates the request and response in the data-sharing request flow.</value>
        [DataMember(Name = "correlationId", IsRequired = true, EmitDefaultValue = true)]
        public string CorrelationId { get; set; }

        /// <summary>
        /// A unique, randomly generated identifier data-sharing request flow is initiated. This value is used with the response code to fetch the callback response data.
        /// </summary>
        /// <value>A unique, randomly generated identifier data-sharing request flow is initiated. This value is used with the response code to fetch the callback response data.</value>
        [DataMember(Name = "transactionId", IsRequired = true, EmitDefaultValue = true)]
        public string TransactionId { get; set; }

        /// <summary>
        /// A unique identifier to fetch the callback response data. Send this value together with the transactionId to successfully fetch the data.
        /// </summary>
        /// <value>A unique identifier to fetch the callback response data. Send this value together with the transactionId to successfully fetch the data.</value>
        [DataMember(Name = "responseCode", IsRequired = true, EmitDefaultValue = true)]
        public string ResponseCode { get; set; }

        /// <summary>
        /// ID of the Affinidi Iota Framework configuration.
        /// </summary>
        /// <value>ID of the Affinidi Iota Framework configuration.</value>
        [DataMember(Name = "configurationId", IsRequired = true, EmitDefaultValue = true)]
        public string ConfigurationId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class FetchIOTAVPResponseInput {\n");
            sb.Append("  CorrelationId: ").Append(CorrelationId).Append("\n");
            sb.Append("  TransactionId: ").Append(TransactionId).Append("\n");
            sb.Append("  ResponseCode: ").Append(ResponseCode).Append("\n");
            sb.Append("  ConfigurationId: ").Append(ConfigurationId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // ResponseCode (string) maxLength
            if (this.ResponseCode != null && this.ResponseCode.Length > 255)
            {
                yield return new ValidationResult("Invalid value for ResponseCode, length must be less than 255.", new[] { "ResponseCode" });
            }

            // ResponseCode (string) minLength
            if (this.ResponseCode != null && this.ResponseCode.Length < 1)
            {
                yield return new ValidationResult("Invalid value for ResponseCode, length must be greater than 1.", new[] { "ResponseCode" });
            }

            yield break;
        }
    }

}
