/*
 * IotaService
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AffinidiTdk.IotaClient.Client.FileParameter;
using OpenAPIDateConverter = AffinidiTdk.IotaClient.Client.OpenAPIDateConverter;

namespace AffinidiTdk.IotaClient.Model
{
    /// <summary>
    /// UpdateDcqlQueryInput
    /// </summary>
    [DataContract(Name = "UpdateDcqlQueryInput")]
    public partial class UpdateDcqlQueryInput : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateDcqlQueryInput" /> class.
        /// </summary>
        /// <param name="dcqlQuery">The DCQL query describing the data requirement that must be satisfied by the user. The value is in a JSON stringify format..</param>
        /// <param name="description">An optional description of what the query is used for..</param>
        public UpdateDcqlQueryInput(string dcqlQuery = default, string description = default)
        {
            this.DcqlQuery = dcqlQuery;
            this.Description = description;
        }

        /// <summary>
        /// The DCQL query describing the data requirement that must be satisfied by the user. The value is in a JSON stringify format.
        /// </summary>
        /// <value>The DCQL query describing the data requirement that must be satisfied by the user. The value is in a JSON stringify format.</value>
        [DataMember(Name = "dcqlQuery", EmitDefaultValue = false)]
        public string DcqlQuery { get; set; }

        /// <summary>
        /// An optional description of what the query is used for.
        /// </summary>
        /// <value>An optional description of what the query is used for.</value>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UpdateDcqlQueryInput {\n");
            sb.Append("  DcqlQuery: ").Append(DcqlQuery).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
