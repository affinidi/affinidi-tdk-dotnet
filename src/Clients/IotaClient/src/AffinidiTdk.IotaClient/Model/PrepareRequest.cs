/*
 * IotaService
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AffinidiTdk.IotaClient.Client.FileParameter;
using OpenAPIDateConverter = AffinidiTdk.IotaClient.Client.OpenAPIDateConverter;

namespace AffinidiTdk.IotaClient.Model
{
    /// <summary>
    /// PrepareRequest
    /// </summary>
    [DataContract(Name = "PrepareRequest")]
    public partial class PrepareRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PrepareRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PrepareRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PrepareRequest" /> class.
        /// </summary>
        /// <param name="connectionClientId">connectionClientId (required).</param>
        /// <param name="queryId">queryId (required).</param>
        /// <param name="correlationId">A unique, randomly generated identifier that correlates the request and response in the data-sharing request flow. (required).</param>
        /// <param name="tokenMaxAge">This is the lifetime of the signed request token during the data-sharing flow..</param>
        /// <param name="audience">audience.</param>
        public PrepareRequest(string connectionClientId = default, string queryId = default, string correlationId = default, decimal tokenMaxAge = default, string audience = default)
        {
            // to ensure "connectionClientId" is required (not null)
            if (connectionClientId == null)
            {
                throw new ArgumentNullException("connectionClientId is a required property for PrepareRequest and cannot be null");
            }
            this.ConnectionClientId = connectionClientId;
            // to ensure "queryId" is required (not null)
            if (queryId == null)
            {
                throw new ArgumentNullException("queryId is a required property for PrepareRequest and cannot be null");
            }
            this.QueryId = queryId;
            // to ensure "correlationId" is required (not null)
            if (correlationId == null)
            {
                throw new ArgumentNullException("correlationId is a required property for PrepareRequest and cannot be null");
            }
            this.CorrelationId = correlationId;
            this.TokenMaxAge = tokenMaxAge;
            this.Audience = audience;
        }

        /// <summary>
        /// Gets or Sets ConnectionClientId
        /// </summary>
        [DataMember(Name = "connectionClientId", IsRequired = true, EmitDefaultValue = true)]
        public string ConnectionClientId { get; set; }

        /// <summary>
        /// Gets or Sets QueryId
        /// </summary>
        [DataMember(Name = "queryId", IsRequired = true, EmitDefaultValue = true)]
        public string QueryId { get; set; }

        /// <summary>
        /// A unique, randomly generated identifier that correlates the request and response in the data-sharing request flow.
        /// </summary>
        /// <value>A unique, randomly generated identifier that correlates the request and response in the data-sharing request flow.</value>
        [DataMember(Name = "correlationId", IsRequired = true, EmitDefaultValue = true)]
        public string CorrelationId { get; set; }

        /// <summary>
        /// This is the lifetime of the signed request token during the data-sharing flow.
        /// </summary>
        /// <value>This is the lifetime of the signed request token during the data-sharing flow.</value>
        [DataMember(Name = "tokenMaxAge", EmitDefaultValue = false)]
        public decimal TokenMaxAge { get; set; }

        /// <summary>
        /// Gets or Sets Audience
        /// </summary>
        [DataMember(Name = "audience", EmitDefaultValue = false)]
        public string Audience { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PrepareRequest {\n");
            sb.Append("  ConnectionClientId: ").Append(ConnectionClientId).Append("\n");
            sb.Append("  QueryId: ").Append(QueryId).Append("\n");
            sb.Append("  CorrelationId: ").Append(CorrelationId).Append("\n");
            sb.Append("  TokenMaxAge: ").Append(TokenMaxAge).Append("\n");
            sb.Append("  Audience: ").Append(Audience).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
