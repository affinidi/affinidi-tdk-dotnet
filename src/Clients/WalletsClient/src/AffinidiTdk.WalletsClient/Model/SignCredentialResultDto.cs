/*
 * CloudWalletEssentials
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AffinidiTdk.WalletsClient.Client.FileParameter;
using OpenAPIDateConverter = AffinidiTdk.WalletsClient.Client.OpenAPIDateConverter;

namespace AffinidiTdk.WalletsClient.Model
{
    /// <summary>
    /// DTO contains signed credential
    /// </summary>
    [DataContract(Name = "SignCredentialResultDto")]
    public partial class SignCredentialResultDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SignCredentialResultDto" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected SignCredentialResultDto() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="SignCredentialResultDto" /> class.
        /// </summary>
        /// <param name="signedCredential">signedCredential (required).</param>
        public SignCredentialResultDto(Dictionary<string, Object> signedCredential = default)
        {
            // to ensure "signedCredential" is required (not null)
            if (signedCredential == null)
            {
                throw new ArgumentNullException("signedCredential is a required property for SignCredentialResultDto and cannot be null");
            }
            this.SignedCredential = signedCredential;
        }

        /// <summary>
        /// Gets or Sets SignedCredential
        /// </summary>
        [DataMember(Name = "signedCredential", IsRequired = true, EmitDefaultValue = true)]
        public Dictionary<string, Object> SignedCredential { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SignCredentialResultDto {\n");
            sb.Append("  SignedCredential: ").Append(SignedCredential).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
