/*
 * CloudWalletEssentials
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = AffinidiTdk.WalletsClient.Client.FileParameter;
using OpenAPIDateConverter = AffinidiTdk.WalletsClient.Client.OpenAPIDateConverter;

namespace AffinidiTdk.WalletsClient.Model
{
    /// <summary>
    /// DTO contains params to sign credential
    /// </summary>
    [DataContract(Name = "SignCredentialInputDto")]
    public partial class SignCredentialInputDto : IValidatableObject
    {
        /// <summary>
        /// Defines CredentialFormat
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum CredentialFormatEnum
        {
            /// <summary>
            /// Enum LdpVc for value: ldp_vc
            /// </summary>
            [EnumMember(Value = "ldp_vc")]
            LdpVc = 1,

            /// <summary>
            /// Enum JwtVcJsonLd for value: jwt_vc_json-ld
            /// </summary>
            [EnumMember(Value = "jwt_vc_json-ld")]
            JwtVcJsonLd = 2,

            /// <summary>
            /// Enum SdJwtVcJsonLd for value: sd_jwt_vc_json-ld
            /// </summary>
            [EnumMember(Value = "sd_jwt_vc_json-ld")]
            SdJwtVcJsonLd = 3
        }


        /// <summary>
        /// Gets or Sets CredentialFormat
        /// </summary>
        [DataMember(Name = "credentialFormat", EmitDefaultValue = false)]
        public CredentialFormatEnum? CredentialFormat { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="SignCredentialInputDto" /> class.
        /// </summary>
        /// <param name="unsignedCredential">Unsigned Credential. If provided \&quot;unsignedCredentialParams\&quot; is not accepted.</param>
        /// <param name="revocable">revocable.</param>
        /// <param name="credentialFormat">credentialFormat.</param>
        /// <param name="unsignedCredentialParams">unsignedCredentialParams.</param>
        public SignCredentialInputDto(Object unsignedCredential = default, bool revocable = default, CredentialFormatEnum? credentialFormat = default, SignCredentialInputDtoUnsignedCredentialParams unsignedCredentialParams = default)
        {
            this.UnsignedCredential = unsignedCredential;
            this.Revocable = revocable;
            this.CredentialFormat = credentialFormat;
            this.UnsignedCredentialParams = unsignedCredentialParams;
        }

        /// <summary>
        /// Unsigned Credential. If provided \&quot;unsignedCredentialParams\&quot; is not accepted
        /// </summary>
        /// <value>Unsigned Credential. If provided \&quot;unsignedCredentialParams\&quot; is not accepted</value>
        [DataMember(Name = "unsignedCredential", EmitDefaultValue = false)]
        public Object UnsignedCredential { get; set; }

        /// <summary>
        /// Gets or Sets Revocable
        /// </summary>
        [DataMember(Name = "revocable", EmitDefaultValue = true)]
        public bool Revocable { get; set; }

        /// <summary>
        /// Gets or Sets UnsignedCredentialParams
        /// </summary>
        [DataMember(Name = "unsignedCredentialParams", EmitDefaultValue = false)]
        public SignCredentialInputDtoUnsignedCredentialParams UnsignedCredentialParams { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SignCredentialInputDto {\n");
            sb.Append("  UnsignedCredential: ").Append(UnsignedCredential).Append("\n");
            sb.Append("  Revocable: ").Append(Revocable).Append("\n");
            sb.Append("  CredentialFormat: ").Append(CredentialFormat).Append("\n");
            sb.Append("  UnsignedCredentialParams: ").Append(UnsignedCredentialParams).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
