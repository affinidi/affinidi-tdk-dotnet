/*
 * CloudWalletEssentials
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AffinidiTdk.WalletsClient.Client.FileParameter;
using OpenAPIDateConverter = AffinidiTdk.WalletsClient.Client.OpenAPIDateConverter;

namespace AffinidiTdk.WalletsClient.Model
{
    /// <summary>
    /// wallet v2 dto
    /// </summary>
    [DataContract(Name = "WalletV2Dto")]
    public partial class WalletV2Dto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WalletV2Dto" /> class.
        /// </summary>
        /// <param name="id">id of the wallet in uuidV4 format.</param>
        /// <param name="did">did of the wallet.</param>
        /// <param name="name">The name of the wallet.</param>
        /// <param name="description">The description of the wallet.</param>
        /// <param name="didDocument">did document of the wallet.</param>
        /// <param name="ari">ARI of the wallet.</param>
        /// <param name="algorithm">algorithm used to generate key for the wallet.</param>
        /// <param name="keys">keys.</param>
        /// <param name="createdAt">createdAt.</param>
        /// <param name="modifiedAt">modifiedAt.</param>
        public WalletV2Dto(string id = default, string did = default, string name = default, string description = default, Object didDocument = default, string ari = default, string algorithm = default, List<WalletDtoKeysInner> keys = default, string createdAt = default, string modifiedAt = default)
        {
            this.Id = id;
            this.Did = did;
            this.Name = name;
            this.Description = description;
            this.DidDocument = didDocument;
            this.Ari = ari;
            this.Algorithm = algorithm;
            this.Keys = keys;
            this.CreatedAt = createdAt;
            this.ModifiedAt = modifiedAt;
        }

        /// <summary>
        /// id of the wallet in uuidV4 format
        /// </summary>
        /// <value>id of the wallet in uuidV4 format</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// did of the wallet
        /// </summary>
        /// <value>did of the wallet</value>
        [DataMember(Name = "did", EmitDefaultValue = false)]
        public string Did { get; set; }

        /// <summary>
        /// The name of the wallet
        /// </summary>
        /// <value>The name of the wallet</value>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// The description of the wallet
        /// </summary>
        /// <value>The description of the wallet</value>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// did document of the wallet
        /// </summary>
        /// <value>did document of the wallet</value>
        [DataMember(Name = "didDocument", EmitDefaultValue = false)]
        public Object DidDocument { get; set; }

        /// <summary>
        /// ARI of the wallet
        /// </summary>
        /// <value>ARI of the wallet</value>
        [DataMember(Name = "ari", EmitDefaultValue = false)]
        public string Ari { get; set; }

        /// <summary>
        /// algorithm used to generate key for the wallet
        /// </summary>
        /// <value>algorithm used to generate key for the wallet</value>
        [DataMember(Name = "algorithm", EmitDefaultValue = false)]
        public string Algorithm { get; set; }

        /// <summary>
        /// Gets or Sets Keys
        /// </summary>
        [DataMember(Name = "keys", EmitDefaultValue = false)]
        public List<WalletDtoKeysInner> Keys { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name = "createdAt", EmitDefaultValue = false)]
        public string CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedAt
        /// </summary>
        [DataMember(Name = "modifiedAt", EmitDefaultValue = false)]
        public string ModifiedAt { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WalletV2Dto {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Did: ").Append(Did).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  DidDocument: ").Append(DidDocument).Append("\n");
            sb.Append("  Ari: ").Append(Ari).Append("\n");
            sb.Append("  Algorithm: ").Append(Algorithm).Append("\n");
            sb.Append("  Keys: ").Append(Keys).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  ModifiedAt: ").Append(ModifiedAt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
