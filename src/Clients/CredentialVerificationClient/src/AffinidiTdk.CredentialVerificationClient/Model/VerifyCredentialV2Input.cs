/*
 * VerificationService
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AffinidiTdk.CredentialVerificationClient.Client.FileParameter;
using OpenAPIDateConverter = AffinidiTdk.CredentialVerificationClient.Client.OpenAPIDateConverter;

namespace AffinidiTdk.CredentialVerificationClient.Model
{
    /// <summary>
    /// Request model of /v2/verify-vcs
    /// </summary>
    [DataContract(Name = "VerifyCredentialV2Input")]
    public partial class VerifyCredentialV2Input : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="VerifyCredentialV2Input" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected VerifyCredentialV2Input() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="VerifyCredentialV2Input" /> class.
        /// </summary>
        /// <param name="verifiableCredentials">List of VC strings (required).</param>
        /// <param name="issuerDidDocument">Dynamic model.</param>
        public VerifyCredentialV2Input(List<string> verifiableCredentials = default, Dictionary<string, Object> issuerDidDocument = default)
        {
            // to ensure "verifiableCredentials" is required (not null)
            if (verifiableCredentials == null)
            {
                throw new ArgumentNullException("verifiableCredentials is a required property for VerifyCredentialV2Input and cannot be null");
            }
            this.VerifiableCredentials = verifiableCredentials;
            this.IssuerDidDocument = issuerDidDocument;
        }

        /// <summary>
        /// List of VC strings
        /// </summary>
        /// <value>List of VC strings</value>
        [DataMember(Name = "verifiableCredentials", IsRequired = true, EmitDefaultValue = true)]
        public List<string> VerifiableCredentials { get; set; }

        /// <summary>
        /// Dynamic model
        /// </summary>
        /// <value>Dynamic model</value>
        [DataMember(Name = "issuerDidDocument", EmitDefaultValue = false)]
        public Dictionary<string, Object> IssuerDidDocument { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class VerifyCredentialV2Input {\n");
            sb.Append("  VerifiableCredentials: ").Append(VerifiableCredentials).Append("\n");
            sb.Append("  IssuerDidDocument: ").Append(IssuerDidDocument).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
