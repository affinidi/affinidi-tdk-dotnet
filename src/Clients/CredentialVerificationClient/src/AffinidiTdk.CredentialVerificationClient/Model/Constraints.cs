/*
 * VerificationService
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = AffinidiTdk.CredentialVerificationClient.Client.FileParameter;
using OpenAPIDateConverter = AffinidiTdk.CredentialVerificationClient.Client.OpenAPIDateConverter;

namespace AffinidiTdk.CredentialVerificationClient.Model
{
    /// <summary>
    /// Constraints
    /// </summary>
    [DataContract(Name = "Constraints")]
    public partial class Constraints : IValidatableObject
    {
        /// <summary>
        /// Defines LimitDisclosure
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum LimitDisclosureEnum
        {
            /// <summary>
            /// Enum Required for value: required
            /// </summary>
            [EnumMember(Value = "required")]
            Required = 1,

            /// <summary>
            /// Enum Preferred for value: preferred
            /// </summary>
            [EnumMember(Value = "preferred")]
            Preferred = 2
        }


        /// <summary>
        /// Gets or Sets LimitDisclosure
        /// </summary>
        [DataMember(Name = "limit_disclosure", EmitDefaultValue = false)]
        public LimitDisclosureEnum? LimitDisclosure { get; set; }
        /// <summary>
        /// Defines SubjectIsIssuer
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum SubjectIsIssuerEnum
        {
            /// <summary>
            /// Enum Required for value: required
            /// </summary>
            [EnumMember(Value = "required")]
            Required = 1,

            /// <summary>
            /// Enum Preferred for value: preferred
            /// </summary>
            [EnumMember(Value = "preferred")]
            Preferred = 2
        }


        /// <summary>
        /// Gets or Sets SubjectIsIssuer
        /// </summary>
        [DataMember(Name = "subject_is_issuer", EmitDefaultValue = false)]
        public SubjectIsIssuerEnum? SubjectIsIssuer { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="Constraints" /> class.
        /// </summary>
        /// <param name="limitDisclosure">limitDisclosure.</param>
        /// <param name="statuses">statuses.</param>
        /// <param name="fields">fields.</param>
        /// <param name="subjectIsIssuer">subjectIsIssuer.</param>
        /// <param name="isHolder">isHolder.</param>
        /// <param name="sameSubject">sameSubject.</param>
        public Constraints(LimitDisclosureEnum? limitDisclosure = default, ConstraintsStatuses statuses = default, List<Field> fields = default, SubjectIsIssuerEnum? subjectIsIssuer = default, List<HolderSubject> isHolder = default, List<HolderSubject> sameSubject = default)
        {
            this.LimitDisclosure = limitDisclosure;
            this.Statuses = statuses;
            this.Fields = fields;
            this.SubjectIsIssuer = subjectIsIssuer;
            this.IsHolder = isHolder;
            this.SameSubject = sameSubject;
        }

        /// <summary>
        /// Gets or Sets Statuses
        /// </summary>
        [DataMember(Name = "statuses", EmitDefaultValue = false)]
        public ConstraintsStatuses Statuses { get; set; }

        /// <summary>
        /// Gets or Sets Fields
        /// </summary>
        [DataMember(Name = "fields", EmitDefaultValue = false)]
        public List<Field> Fields { get; set; }

        /// <summary>
        /// Gets or Sets IsHolder
        /// </summary>
        [DataMember(Name = "is_holder", EmitDefaultValue = false)]
        public List<HolderSubject> IsHolder { get; set; }

        /// <summary>
        /// Gets or Sets SameSubject
        /// </summary>
        [DataMember(Name = "same_subject", EmitDefaultValue = false)]
        public List<HolderSubject> SameSubject { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Constraints {\n");
            sb.Append("  LimitDisclosure: ").Append(LimitDisclosure).Append("\n");
            sb.Append("  Statuses: ").Append(Statuses).Append("\n");
            sb.Append("  Fields: ").Append(Fields).Append("\n");
            sb.Append("  SubjectIsIssuer: ").Append(SubjectIsIssuer).Append("\n");
            sb.Append("  IsHolder: ").Append(IsHolder).Append("\n");
            sb.Append("  SameSubject: ").Append(SameSubject).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
