/*
 * VerificationService
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = AffinidiTdk.CredentialVerificationClient.Client.FileParameter;
using OpenAPIDateConverter = AffinidiTdk.CredentialVerificationClient.Client.OpenAPIDateConverter;

namespace AffinidiTdk.CredentialVerificationClient.Model
{
    /// <summary>
    /// Format
    /// </summary>
    [DataContract(Name = "Format")]
    public partial class Format : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Format" /> class.
        /// </summary>
        /// <param name="jwt">jwt.</param>
        /// <param name="jwtVc">jwtVc.</param>
        /// <param name="jwtVp">jwtVp.</param>
        /// <param name="ldp">ldp.</param>
        /// <param name="ldpVc">ldpVc.</param>
        /// <param name="ldpVp">ldpVp.</param>
        public Format(JwtObject jwt = default, JwtObject jwtVc = default, JwtObject jwtVp = default, LdpObject ldp = default, LdpObject ldpVc = default, LdpObject ldpVp = default)
        {
            this.Jwt = jwt;
            this.JwtVc = jwtVc;
            this.JwtVp = jwtVp;
            this.Ldp = ldp;
            this.LdpVc = ldpVc;
            this.LdpVp = ldpVp;
        }

        /// <summary>
        /// Gets or Sets Jwt
        /// </summary>
        [DataMember(Name = "jwt", EmitDefaultValue = false)]
        public JwtObject Jwt { get; set; }

        /// <summary>
        /// Gets or Sets JwtVc
        /// </summary>
        [DataMember(Name = "jwt_vc", EmitDefaultValue = false)]
        public JwtObject JwtVc { get; set; }

        /// <summary>
        /// Gets or Sets JwtVp
        /// </summary>
        [DataMember(Name = "jwt_vp", EmitDefaultValue = false)]
        public JwtObject JwtVp { get; set; }

        /// <summary>
        /// Gets or Sets Ldp
        /// </summary>
        [DataMember(Name = "ldp", EmitDefaultValue = false)]
        public LdpObject Ldp { get; set; }

        /// <summary>
        /// Gets or Sets LdpVc
        /// </summary>
        [DataMember(Name = "ldp_vc", EmitDefaultValue = false)]
        public LdpObject LdpVc { get; set; }

        /// <summary>
        /// Gets or Sets LdpVp
        /// </summary>
        [DataMember(Name = "ldp_vp", EmitDefaultValue = false)]
        public LdpObject LdpVp { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Format {\n");
            sb.Append("  Jwt: ").Append(Jwt).Append("\n");
            sb.Append("  JwtVc: ").Append(JwtVc).Append("\n");
            sb.Append("  JwtVp: ").Append(JwtVp).Append("\n");
            sb.Append("  Ldp: ").Append(Ldp).Append("\n");
            sb.Append("  LdpVc: ").Append(LdpVc).Append("\n");
            sb.Append("  LdpVp: ").Append(LdpVp).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
