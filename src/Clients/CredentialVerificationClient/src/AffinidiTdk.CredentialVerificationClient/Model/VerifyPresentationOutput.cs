/*
 * VerificationService
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AffinidiTdk.CredentialVerificationClient.Client.FileParameter;
using OpenAPIDateConverter = AffinidiTdk.CredentialVerificationClient.Client.OpenAPIDateConverter;

namespace AffinidiTdk.CredentialVerificationClient.Model
{
    /// <summary>
    /// Response model of /verify-vp
    /// </summary>
    [DataContract(Name = "VerifyPresentationOutput")]
    public partial class VerifyPresentationOutput : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="VerifyPresentationOutput" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected VerifyPresentationOutput() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="VerifyPresentationOutput" /> class.
        /// </summary>
        /// <param name="errors">Error of the verification (required).</param>
        /// <param name="isValid">Verification result (required).</param>
        public VerifyPresentationOutput(List<string> errors = default, bool isValid = default)
        {
            // to ensure "errors" is required (not null)
            if (errors == null)
            {
                throw new ArgumentNullException("errors is a required property for VerifyPresentationOutput and cannot be null");
            }
            this.Errors = errors;
            this.IsValid = isValid;
        }

        /// <summary>
        /// Error of the verification
        /// </summary>
        /// <value>Error of the verification</value>
        [DataMember(Name = "errors", IsRequired = true, EmitDefaultValue = true)]
        public List<string> Errors { get; set; }

        /// <summary>
        /// Verification result
        /// </summary>
        /// <value>Verification result</value>
        [DataMember(Name = "isValid", IsRequired = true, EmitDefaultValue = true)]
        public bool IsValid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class VerifyPresentationOutput {\n");
            sb.Append("  Errors: ").Append(Errors).Append("\n");
            sb.Append("  IsValid: ").Append(IsValid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
