/*
 * VaultFileSystem
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = AffinidiTdk.VaultDataManagerClient.Client.FileParameter;
using OpenAPIDateConverter = AffinidiTdk.VaultDataManagerClient.Client.OpenAPIDateConverter;

namespace AffinidiTdk.VaultDataManagerClient.Model
{
    /// <summary>
    /// UpdateAccountInput
    /// </summary>
    [DataContract(Name = "UpdateAccountInput")]
    public partial class UpdateAccountInput : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateAccountInput" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected UpdateAccountInput() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateAccountInput" /> class.
        /// </summary>
        /// <param name="name">Name of the account.</param>
        /// <param name="description">Description of the account.</param>
        /// <param name="alias">Alias of the account.</param>
        /// <param name="didProof">JWT that proves ownership of profile DID by requester (required).</param>
        /// <param name="metadata">Description of metadata.</param>
        /// <param name="accountDid">DID that is associated with the account number (required).</param>
        public UpdateAccountInput(string name = default, string description = default, string alias = default, string didProof = default, Object metadata = default, string accountDid = default)
        {
            // to ensure "didProof" is required (not null)
            if (didProof == null)
            {
                throw new ArgumentNullException("didProof is a required property for UpdateAccountInput and cannot be null");
            }
            this.DidProof = didProof;
            // to ensure "accountDid" is required (not null)
            if (accountDid == null)
            {
                throw new ArgumentNullException("accountDid is a required property for UpdateAccountInput and cannot be null");
            }
            this.AccountDid = accountDid;
            this.Name = name;
            this.Description = description;
            this.Alias = alias;
            this.Metadata = metadata;
        }

        /// <summary>
        /// Name of the account
        /// </summary>
        /// <value>Name of the account</value>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Description of the account
        /// </summary>
        /// <value>Description of the account</value>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Alias of the account
        /// </summary>
        /// <value>Alias of the account</value>
        [DataMember(Name = "alias", EmitDefaultValue = false)]
        public string Alias { get; set; }

        /// <summary>
        /// JWT that proves ownership of profile DID by requester
        /// </summary>
        /// <value>JWT that proves ownership of profile DID by requester</value>
        [DataMember(Name = "didProof", IsRequired = true, EmitDefaultValue = true)]
        public string DidProof { get; set; }

        /// <summary>
        /// Description of metadata
        /// </summary>
        /// <value>Description of metadata</value>
        [DataMember(Name = "metadata", EmitDefaultValue = false)]
        public Object Metadata { get; set; }

        /// <summary>
        /// DID that is associated with the account number
        /// </summary>
        /// <value>DID that is associated with the account number</value>
        [DataMember(Name = "accountDid", IsRequired = true, EmitDefaultValue = true)]
        public string AccountDid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UpdateAccountInput {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Alias: ").Append(Alias).Append("\n");
            sb.Append("  DidProof: ").Append(DidProof).Append("\n");
            sb.Append("  Metadata: ").Append(Metadata).Append("\n");
            sb.Append("  AccountDid: ").Append(AccountDid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
