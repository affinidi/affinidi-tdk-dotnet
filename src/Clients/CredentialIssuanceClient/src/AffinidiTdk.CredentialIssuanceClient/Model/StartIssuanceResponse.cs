/*
 * CredentialIssuanceService
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AffinidiTdk.CredentialIssuanceClient.Client.FileParameter;
using OpenAPIDateConverter = AffinidiTdk.CredentialIssuanceClient.Client.OpenAPIDateConverter;

namespace AffinidiTdk.CredentialIssuanceClient.Model
{
    /// <summary>
    /// StartIssuanceResponse
    /// </summary>
    [DataContract(Name = "StartIssuanceResponse")]
    public partial class StartIssuanceResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="StartIssuanceResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected StartIssuanceResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="StartIssuanceResponse" /> class.
        /// </summary>
        /// <param name="credentialOfferUri">URL where wallet can view offer details (required).</param>
        /// <param name="txCode">One time transaction code generated by CIS.</param>
        /// <param name="issuanceId">Website&#39;s internal identifier. Website may use to get info about the status of issuance flow. If it is not provided, CIS will generate one. (required).</param>
        /// <param name="expiresIn">Expire time in seconds (required).</param>
        public StartIssuanceResponse(string credentialOfferUri = default, string txCode = default, string issuanceId = default, decimal expiresIn = default)
        {
            // to ensure "credentialOfferUri" is required (not null)
            if (credentialOfferUri == null)
            {
                throw new ArgumentNullException("credentialOfferUri is a required property for StartIssuanceResponse and cannot be null");
            }
            this.CredentialOfferUri = credentialOfferUri;
            // to ensure "issuanceId" is required (not null)
            if (issuanceId == null)
            {
                throw new ArgumentNullException("issuanceId is a required property for StartIssuanceResponse and cannot be null");
            }
            this.IssuanceId = issuanceId;
            this.ExpiresIn = expiresIn;
            this.TxCode = txCode;
        }

        /// <summary>
        /// URL where wallet can view offer details
        /// </summary>
        /// <value>URL where wallet can view offer details</value>
        [DataMember(Name = "credentialOfferUri", IsRequired = true, EmitDefaultValue = true)]
        public string CredentialOfferUri { get; set; }

        /// <summary>
        /// One time transaction code generated by CIS
        /// </summary>
        /// <value>One time transaction code generated by CIS</value>
        [DataMember(Name = "txCode", EmitDefaultValue = false)]
        public string TxCode { get; set; }

        /// <summary>
        /// Website&#39;s internal identifier. Website may use to get info about the status of issuance flow. If it is not provided, CIS will generate one.
        /// </summary>
        /// <value>Website&#39;s internal identifier. Website may use to get info about the status of issuance flow. If it is not provided, CIS will generate one.</value>
        [DataMember(Name = "issuanceId", IsRequired = true, EmitDefaultValue = true)]
        public string IssuanceId { get; set; }

        /// <summary>
        /// Expire time in seconds
        /// </summary>
        /// <value>Expire time in seconds</value>
        [DataMember(Name = "expiresIn", IsRequired = true, EmitDefaultValue = true)]
        public decimal ExpiresIn { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class StartIssuanceResponse {\n");
            sb.Append("  CredentialOfferUri: ").Append(CredentialOfferUri).Append("\n");
            sb.Append("  TxCode: ").Append(TxCode).Append("\n");
            sb.Append("  IssuanceId: ").Append(IssuanceId).Append("\n");
            sb.Append("  ExpiresIn: ").Append(ExpiresIn).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
