/*
 * CredentialIssuanceService
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = AffinidiTdk.CredentialIssuanceClient.Client.FileParameter;
using OpenAPIDateConverter = AffinidiTdk.CredentialIssuanceClient.Client.OpenAPIDateConverter;

namespace AffinidiTdk.CredentialIssuanceClient.Model
{
    /// <summary>
    /// WellKnownOpenIdCredentialIssuerResponseCredentialsSupportedInner
    /// </summary>
    [DataContract(Name = "WellKnownOpenIdCredentialIssuerResponse_credentials_supported_inner")]
    public partial class WellKnownOpenIdCredentialIssuerResponseCredentialsSupportedInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WellKnownOpenIdCredentialIssuerResponseCredentialsSupportedInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected WellKnownOpenIdCredentialIssuerResponseCredentialsSupportedInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="WellKnownOpenIdCredentialIssuerResponseCredentialsSupportedInner" /> class.
        /// </summary>
        /// <param name="credentialTypeId">It is a String that identifies a Credential that is being requested to be issued. (required).</param>
        /// <param name="jsonSchemaUrl">credential jsonLdContextUrl (required).</param>
        /// <param name="jsonLdContextUrl">credential jsonSchemaUrl (required).</param>
        public WellKnownOpenIdCredentialIssuerResponseCredentialsSupportedInner(string credentialTypeId = default, string jsonSchemaUrl = default, string jsonLdContextUrl = default)
        {
            // to ensure "credentialTypeId" is required (not null)
            if (credentialTypeId == null)
            {
                throw new ArgumentNullException("credentialTypeId is a required property for WellKnownOpenIdCredentialIssuerResponseCredentialsSupportedInner and cannot be null");
            }
            this.CredentialTypeId = credentialTypeId;
            // to ensure "jsonSchemaUrl" is required (not null)
            if (jsonSchemaUrl == null)
            {
                throw new ArgumentNullException("jsonSchemaUrl is a required property for WellKnownOpenIdCredentialIssuerResponseCredentialsSupportedInner and cannot be null");
            }
            this.JsonSchemaUrl = jsonSchemaUrl;
            // to ensure "jsonLdContextUrl" is required (not null)
            if (jsonLdContextUrl == null)
            {
                throw new ArgumentNullException("jsonLdContextUrl is a required property for WellKnownOpenIdCredentialIssuerResponseCredentialsSupportedInner and cannot be null");
            }
            this.JsonLdContextUrl = jsonLdContextUrl;
        }

        /// <summary>
        /// It is a String that identifies a Credential that is being requested to be issued.
        /// </summary>
        /// <value>It is a String that identifies a Credential that is being requested to be issued.</value>
        [DataMember(Name = "credentialTypeId", IsRequired = true, EmitDefaultValue = true)]
        public string CredentialTypeId { get; set; }

        /// <summary>
        /// credential jsonLdContextUrl
        /// </summary>
        /// <value>credential jsonLdContextUrl</value>
        [DataMember(Name = "jsonSchemaUrl", IsRequired = true, EmitDefaultValue = true)]
        public string JsonSchemaUrl { get; set; }

        /// <summary>
        /// credential jsonSchemaUrl
        /// </summary>
        /// <value>credential jsonSchemaUrl</value>
        [DataMember(Name = "jsonLdContextUrl", IsRequired = true, EmitDefaultValue = true)]
        public string JsonLdContextUrl { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WellKnownOpenIdCredentialIssuerResponseCredentialsSupportedInner {\n");
            sb.Append("  CredentialTypeId: ").Append(CredentialTypeId).Append("\n");
            sb.Append("  JsonSchemaUrl: ").Append(JsonSchemaUrl).Append("\n");
            sb.Append("  JsonLdContextUrl: ").Append(JsonLdContextUrl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
