/*
 * Iam
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AffinidiTdk.IamClient.Client.FileParameter;
using OpenAPIDateConverter = AffinidiTdk.IamClient.Client.OpenAPIDateConverter;

namespace AffinidiTdk.IamClient.Model
{
    /// <summary>
    /// Private Key JWT Authentication of Client with &#x60;private_key_jwt&#x60; oAuth Method
    /// </summary>
    [DataContract(Name = "TokenPrivateKeyAuthenticationMethodDto")]
    public partial class TokenPrivateKeyAuthenticationMethodDto : IValidatableObject
    {
        /// <summary>
        /// Defines Type
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TypeEnum
        {
            /// <summary>
            /// Enum PRIVATEKEY for value: PRIVATE_KEY
            /// </summary>
            [EnumMember(Value = "PRIVATE_KEY")]
            PRIVATEKEY = 1
        }


        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", IsRequired = true, EmitDefaultValue = true)]
        public TypeEnum Type { get; set; }
        /// <summary>
        /// Defines SigningAlgorithm
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum SigningAlgorithmEnum
        {
            /// <summary>
            /// Enum RS256 for value: RS256
            /// </summary>
            [EnumMember(Value = "RS256")]
            RS256 = 1,

            /// <summary>
            /// Enum RS512 for value: RS512
            /// </summary>
            [EnumMember(Value = "RS512")]
            RS512 = 2,

            /// <summary>
            /// Enum ES256 for value: ES256
            /// </summary>
            [EnumMember(Value = "ES256")]
            ES256 = 3,

            /// <summary>
            /// Enum ES512 for value: ES512
            /// </summary>
            [EnumMember(Value = "ES512")]
            ES512 = 4
        }


        /// <summary>
        /// Gets or Sets SigningAlgorithm
        /// </summary>
        [DataMember(Name = "signingAlgorithm", IsRequired = true, EmitDefaultValue = true)]
        public SigningAlgorithmEnum SigningAlgorithm { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="TokenPrivateKeyAuthenticationMethodDto" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected TokenPrivateKeyAuthenticationMethodDto() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="TokenPrivateKeyAuthenticationMethodDto" /> class.
        /// </summary>
        /// <param name="type">type (required).</param>
        /// <param name="signingAlgorithm">signingAlgorithm (required).</param>
        /// <param name="publicKeyInfo">publicKeyInfo (required).</param>
        public TokenPrivateKeyAuthenticationMethodDto(TypeEnum type = default, SigningAlgorithmEnum signingAlgorithm = default, TokenPrivateKeyAuthenticationMethodDtoPublicKeyInfo publicKeyInfo = default)
        {
            this.Type = type;
            this.SigningAlgorithm = signingAlgorithm;
            // to ensure "publicKeyInfo" is required (not null)
            if (publicKeyInfo == null)
            {
                throw new ArgumentNullException("publicKeyInfo is a required property for TokenPrivateKeyAuthenticationMethodDto and cannot be null");
            }
            this.PublicKeyInfo = publicKeyInfo;
        }

        /// <summary>
        /// Gets or Sets PublicKeyInfo
        /// </summary>
        [DataMember(Name = "publicKeyInfo", IsRequired = true, EmitDefaultValue = true)]
        public TokenPrivateKeyAuthenticationMethodDtoPublicKeyInfo PublicKeyInfo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TokenPrivateKeyAuthenticationMethodDto {\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  SigningAlgorithm: ").Append(SigningAlgorithm).Append("\n");
            sb.Append("  PublicKeyInfo: ").Append(PublicKeyInfo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
