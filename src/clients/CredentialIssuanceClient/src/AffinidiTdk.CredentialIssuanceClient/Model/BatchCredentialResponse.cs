/*
 * CredentialIssuanceService
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AffinidiTdk.CredentialIssuanceClient.Client.FileParameter;
using OpenAPIDateConverter = AffinidiTdk.CredentialIssuanceClient.Client.OpenAPIDateConverter;

namespace AffinidiTdk.CredentialIssuanceClient.Model
{
    /// <summary>
    /// BatchCredentialResponse
    /// </summary>
    [DataContract(Name = "BatchCredentialResponse")]
    public partial class BatchCredentialResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BatchCredentialResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected BatchCredentialResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="BatchCredentialResponse" /> class.
        /// </summary>
        /// <param name="credentialResponses">credentialResponses (required).</param>
        /// <param name="cNonce">cNonce.</param>
        /// <param name="cNonceExpiresIn">Expiration time in seconds.</param>
        public BatchCredentialResponse(List<BatchCredentialResponseCredentialResponsesInner> credentialResponses = default, string cNonce = default, int cNonceExpiresIn = default)
        {
            // to ensure "credentialResponses" is required (not null)
            if (credentialResponses == null)
            {
                throw new ArgumentNullException("credentialResponses is a required property for BatchCredentialResponse and cannot be null");
            }
            this.CredentialResponses = credentialResponses;
            this.CNonce = cNonce;
            this.CNonceExpiresIn = cNonceExpiresIn;
        }

        /// <summary>
        /// Gets or Sets CredentialResponses
        /// </summary>
        [DataMember(Name = "credential_responses", IsRequired = true, EmitDefaultValue = true)]
        public List<BatchCredentialResponseCredentialResponsesInner> CredentialResponses { get; set; }

        /// <summary>
        /// Gets or Sets CNonce
        /// </summary>
        [DataMember(Name = "c_nonce", EmitDefaultValue = false)]
        public string CNonce { get; set; }

        /// <summary>
        /// Expiration time in seconds
        /// </summary>
        /// <value>Expiration time in seconds</value>
        [DataMember(Name = "c_nonce_expires_in", EmitDefaultValue = false)]
        public int CNonceExpiresIn { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BatchCredentialResponse {\n");
            sb.Append("  CredentialResponses: ").Append(CredentialResponses).Append("\n");
            sb.Append("  CNonce: ").Append(CNonce).Append("\n");
            sb.Append("  CNonceExpiresIn: ").Append(CNonceExpiresIn).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
